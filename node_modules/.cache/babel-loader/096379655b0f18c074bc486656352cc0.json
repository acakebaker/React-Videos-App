{"ast":null,"code":"var _jsxFileName = \"/Users/alexbaker/Documents/GitHub/Videos-App/videos-app/src/components/VideoDetail.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoDetail = _ref => {\n  let {\n    videos,\n    selectedVideo\n  } = _ref;\n\n  // Outputs for if there is no search.\n  if (videos.length <= 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Search for a video to watch.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }, this);\n  } // Output for if there is no video selected.\n\n\n  if (videos.length > 0 && !selectedVideo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a video to watch.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this);\n  }\n\n  const videoSource = `https://www.youtube.com/embed/${selectedVideo.id.videoId}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui embed\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: videoSource,\n        title: \"Video Player\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"ui header\",\n        children: selectedVideo.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedVideo.snippet.channelTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedVideo.snippet.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n\n_c = VideoDetail;\nexport default VideoDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoDetail\");","map":{"version":3,"sources":["/Users/alexbaker/Documents/GitHub/Videos-App/videos-app/src/components/VideoDetail.js"],"names":["React","VideoDetail","videos","selectedVideo","length","videoSource","id","videoId","snippet","title","channelTitle","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA8B;;AAChD;AACA,MAAGD,MAAM,CAACE,MAAP,IAAiB,CAApB,EAAuB;AACpB,wBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAKF,GAR+C,CAUhD;;;AACA,MAAGF,MAAM,CAACE,MAAP,GAAgB,CAAhB,IAAqB,CAACD,aAAzB,EAAwC;AACrC,wBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAKF;;AAED,QAAME,WAAW,GAAI,iCAAgCF,aAAa,CAACG,EAAd,CAAiBC,OAAQ,EAA9E;AAEA,sBACG;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACG;AACG,QAAA,GAAG,EAAEF,WADR;AAEG,QAAA,KAAK,EAAC,cAFT;AAGG,QAAA,eAAe,EAAE;AAHpB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH,eAQG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBAA2BF,aAAa,CAACK,OAAd,CAAsBC;AAAjD;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAA,+BAAG;AAAA,oBAASN,aAAa,CAACK,OAAd,CAAsBE;AAA/B;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAA,kBAAIP,aAAa,CAACK,OAAd,CAAsBG;AAA1B;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAgBF,CArCD;;KAAMV,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\nconst VideoDetail = ({ videos, selectedVideo }) => {\n   // Outputs for if there is no search.\n   if(videos.length <= 0) {\n      return (\n         <div className=\"ui segment\">\n            <h4>Search for a video to watch.</h4>\n         </div>\n      );\n   }\n\n   // Output for if there is no video selected.\n   if(videos.length > 0 && !selectedVideo) {\n      return (\n         <div className=\"ui segment\">\n            <h3>Select a video to watch.</h3>\n         </div>\n      );\n   }\n\n   const videoSource = `https://www.youtube.com/embed/${selectedVideo.id.videoId}`;\n\n   return (\n      <div>\n         <div className=\"ui embed\">\n            <iframe \n               src={videoSource} \n               title='Video Player' \n               allowFullScreen={true} \n            />\n         </div>\n         <div className=\"ui segment\">\n            <h3 className=\"ui header\">{selectedVideo.snippet.title}</h3>\n            <p><strong>{selectedVideo.snippet.channelTitle}</strong></p>\n            <p>{selectedVideo.snippet.description}</p>\n         </div>\n      </div>\n   );\n}\n\nexport default VideoDetail;"]},"metadata":{},"sourceType":"module"}